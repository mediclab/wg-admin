FROM composer:latest as vendor_builder

ENV COMPOSER_ALLOW_SUPERUSER 1

WORKDIR /app
COPY composer.* /app/
RUN composer install -q --no-dev --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs --optimize-autoloader --no-suggest

FROM node:16-alpine3.16 as node_builder

COPY . /app/
COPY --from=vendor_builder /app/vendor /app/vendor
WORKDIR /app
RUN npm i && npm run production

FROM php:8.0-fpm-alpine3.16

RUN apk add --no-cache --update \
      sudo \
      wireguard-tools \
    && apk add --no-cache --update --virtual .phpDeps \
      # for GD
      freetype \
      libpng \
      libjpeg-turbo \
      # for zip
      libzip \
      icu-libs \
      postgresql-libs \
    && apk add --no-cache --update --virtual .buildDeps \
      libzip-dev \
      postgresql-dev \
      # for GD
      freetype-dev \
      libpng-dev  \
      libjpeg-turbo-dev \
      libxslt-dev \
    && docker-php-ext-configure gd \
            --with-freetype=/usr/include/ \
            --with-jpeg=/usr/include/ \
    && docker-php-ext-configure pdo_pgsql --with-pdo-pgsql \
    && docker-php-ext-configure intl --enable-intl \
    && docker-php-ext-install -j$(nproc) \
      gd \
      intl \
      pdo_pgsql \
      zip \
    && apk del .buildDeps \
    && echo "Defaults lecture = never" >> /etc/sudoers \
    && echo "www-data ALL=(root) NOPASSWD: /usr/bin/wg-quick, /usr/bin/wg, /usr/bin/tee, /bin/rm" >> /etc/sudoers.d/www-data

WORKDIR /var/www/html

COPY ./docker/php/docker-php-entrypoint /usr/local/bin/docker-php-entrypoint
COPY . ./
COPY --from=vendor_builder /app/vendor /var/www/html/vendor
COPY --from=node_builder /app/public /var/www/html/public
RUN chown -R 82:82 /var/www/html
